// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go

// Package mock_token is a generated GoMock package.
package mock_token

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenHandler is a mock of TokenHandler interface.
type MockTokenHandler struct {
	ctrl     *gomock.Controller
	recorder *MockTokenHandlerMockRecorder
}

// MockTokenHandlerMockRecorder is the mock recorder for MockTokenHandler.
type MockTokenHandlerMockRecorder struct {
	mock *MockTokenHandler
}

// NewMockTokenHandler creates a new mock instance.
func NewMockTokenHandler(ctrl *gomock.Controller) *MockTokenHandler {
	mock := &MockTokenHandler{ctrl: ctrl}
	mock.recorder = &MockTokenHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenHandler) EXPECT() *MockTokenHandlerMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockTokenHandler) Generate(arg0 int, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockTokenHandlerMockRecorder) Generate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockTokenHandler)(nil).Generate), arg0, arg1)
}

// VerityToken mocks base method.
func (m *MockTokenHandler) VerityToken(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerityToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerityToken indicates an expected call of VerityToken.
func (mr *MockTokenHandlerMockRecorder) VerityToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerityToken", reflect.TypeOf((*MockTokenHandler)(nil).VerityToken), arg0)
}
